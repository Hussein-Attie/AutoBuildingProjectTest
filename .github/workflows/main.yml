name: Actions 

on:
  pull_request: {}
  push: { branches: [master] }
 
env:
  UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
 
 
jobs:

  BuildWindows:
    name: Build the Project for Windows
    runs-on: ubuntu-latest
   
        
    steps:
     
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true
     
      # Cache
      - uses: actions/cache@v1.1.0
        with:
          path: Library
          key: Library
 
      # Test
      - name: Run tests
        uses: webbertakken/unity-test-runner@v1.3
        with:
          
          unityVersion: 2019.3.9f1
 
      # Build for win
      - name: Build project for windows
        uses: webbertakken/unity-builder@v0.10
        with:
          
           buildName: InteractiveWriting-Windows 
           unityVersion: 2019.3.9f1
           targetPlatform : 
            StandaloneWindows64

         
      # Output for win
      - uses: actions/upload-artifact@v1
        with:
          name: WinBuiltProject
          path: build
      
  BuildMacOS:
     name: Build the Project for MacOS
     runs-on: ubuntu-latest
   
        
     steps:
     
      # Checkout
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          lfs: true
     
      # Cache
      - uses: actions/cache@v1.1.0
        with:
          path: Library
          key: Library
 
      # Test
      - name: Run tests
        uses: webbertakken/unity-test-runner@v1.3
        with:
          unityVersion: 2019.3.9f1
 
      # Build for Mac
      - name: Build project for MacOS
        uses: webbertakken/unity-builder@v0.10
        with:

           buildName: InteractiveWriting-Mac 
           unityVersion: 2019.3.9f1
           targetPlatform : 
              StandaloneOSX 
       
 
      # Output for Mac
      - uses: actions/upload-artifact@v1
        with:
          name: MacBuiltProject
          path: build

  Release :
    name: Release the project
    runs-on : ubuntu-latest
    needs : 
    - BuildWindows        
    - BuildMacOS
    
    steps:
    
    
     # Upload to Drive
      - name: Upload build to Google Drive
        uses: Jodebu/upload-to-drive@master
        with:
          target: build
          name: InteractiveWriting
          credentials: ${{ secrets.CREDENTIALS }}
          folder: ${{ secrets.DRIVE_FILE_ID }}
          
#         - name: Win Download files
#           uses: actions/download-artifact@v2
#           with:
#            name: WinBuiltProject 
#            path: build
           
#         - name: Mac Download files
#           uses: actions/download-artifact@v2
#           with:
#            name: MacBuiltProject 
#            path: build 
           
#         - name: WinCompressTheFinalResult
#           uses: thedoctor0/zip-release@master
#           with:
#            filename: WinBuiltProject.zip 
#            path: build
           
#         - name: MacCompressTheFinalResult
#           uses: thedoctor0/zip-release@master
#           with:
#             filename: MacBuiltProject.zip
#             path: build
           
        
#         - name: Create Github Release
#           id: create-new-release 
#           uses: actions/create-release@v1
#           env:
#            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
#           with:
#            tag_name: v${{ github.run_number  }} 
#            release_name: Release v${{ github.run_number }}
           
#         - name: WinUpload to GitHub Release
#           uses: actions/upload-release-asset@v1
#           env:
#            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           with:
#            upload_url: ${{ steps.create-new-release.outputs.upload_url  }} 
#            asset_path: ./WinBuiltProject
#            asset_name: WinBuiltProject-v${{ github.run_number }}.zip
#            asset_content_type: application/zip
           
#         - name: MacUpload to GitHub Release
#           uses: actions/upload-release-asset@v1
#           env:
#            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
#           with:
#            upload_url: ${{ steps.create-new-release.outputs.upload_url  }} 
#            asset_path: ./MacBuiltProject
#            asset_name: MacBuiltProject-v${{ github.run_number }}.zip
#            asset_content_type: application/zip
           #Clears No longer needed artifacts
#         - name: Clear artifacts
#           uses: kolpav/purge-artifacts-action@v1
#           with:
#            token: ${{ secrets.GITHUB_TOKEN }}
#            expire-in: 3hr
